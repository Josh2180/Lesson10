
import java.io.*;
import java.util.*;
import javax.swing.*;

public class NHLInterface extends javax.swing.JFrame {

    ArrayList<Player> list;
    DefaultListModel model;
    FileReader f;
    StringTokenizer st;
    BufferedReader br;

    public NHLInterface() {
        initComponents();
        list = new ArrayList();
        model = new DefaultListModel();
        try {
            f = new FileReader("nhlplayers.txt");
            br = new BufferedReader(f);
            for (int i = 0; i < 614; i++) {
                String data = br.readLine();
                st = new StringTokenizer(data, ",");
                String n, t, p;
                double s;
                int w;
                n = st.nextToken();
                t = st.nextToken();
                p = st.nextToken();
                s = Double.valueOf(st.nextToken());
                w = Integer.parseInt(st.nextToken());
                list.add(new Player(n, t, p, s, w));
                model.addElement(n);
            }
            br.close();
            lstnames.setModel(model);
        } catch (Exception e) {
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        lstnames = new javax.swing.JList();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtarea = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        btnfile = new javax.swing.JMenu();
        btnexit = new javax.swing.JMenuItem();
        btnedit = new javax.swing.JMenu();
        btndelete = new javax.swing.JMenuItem();
        btnfilter = new javax.swing.JMenu();
        btnteam = new javax.swing.JMenuItem();
        btnall = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lstnames.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lstnamesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(lstnames);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Names");
        jLabel1.setToolTipText("");

        txtarea.setEditable(false);
        txtarea.setColumns(20);
        txtarea.setRows(5);
        jScrollPane2.setViewportView(txtarea);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Detailed Information");

        btnfile.setText("File");

        btnexit.setIcon(new javax.swing.ImageIcon("C:\\Users\\Jpewpoopachew\\Programming\\Lesson10\\exit.png")); // NOI18N
        btnexit.setText("Exit");
        btnexit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnexitActionPerformed(evt);
            }
        });
        btnfile.add(btnexit);

        jMenuBar1.add(btnfile);

        btnedit.setText("Edit");

        btndelete.setText("Delete");
        btndelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btndeleteActionPerformed(evt);
            }
        });
        btnedit.add(btndelete);

        jMenuBar1.add(btnedit);

        btnfilter.setText("Filter");

        btnteam.setText("By Selected Team");
        btnteam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnteamActionPerformed(evt);
            }
        });
        btnfilter.add(btnteam);

        btnall.setText("Show All");
        btnall.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnallActionPerformed(evt);
            }
        });
        btnfilter.add(btnall);

        jMenuBar1.add(btnfilter);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 259, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 245, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnexitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnexitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_btnexitActionPerformed

    private void btnallActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnallActionPerformed
        model.removeAllElements();
        for (int x = 0; x < list.size(); x++) {
            Player temp = list.get(x);
            model.addElement(temp.getName());
        }
    }//GEN-LAST:event_btnallActionPerformed

    private void lstnamesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lstnamesMouseClicked
        try {
            int item = lstnames.getSelectedIndex();
            String s = (String) (model.getElementAt(item));
            Player temp = new Player(s, "", "", 0, 0);
            int location = search(list, temp);
            txtarea.setText(list.get(location).toString());
        } catch (Exception e) {
        }
    }//GEN-LAST:event_lstnamesMouseClicked

    private void btndeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btndeleteActionPerformed
        try {
            int loc = lstnames.getSelectedIndex();
            String name = String.valueOf(model.getElementAt(loc));
            Player temp = new Player(name, null, null, 0, 0);
            model.removeElementAt(loc);
            loc = search(list, temp);
            list.remove(loc);
        } catch (Exception e) {
        }
    }//GEN-LAST:event_btndeleteActionPerformed

    private void btnteamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnteamActionPerformed
        try {
            int loc = lstnames.getSelectedIndex();
            String name = String.valueOf(model.getElementAt(loc));
            Player temp = new Player(name, null, null, 0, 0);
            loc = search(list, temp);
            String team = list.get(loc).getTeam();
            temp = new Player(null, team, null, 0, 0);
            model.removeAllElements();
            for (int x = 0; x < list.size(); x++) {
                Player temp2 = list.get(x);
                if (temp2.getTeam().equals(team)) {
                    model.addElement(temp2.getName());
                }
            }
        } catch (Exception e) {
        }

    }//GEN-LAST:event_btnteamActionPerformed

    public static int search(ArrayList a, Object searchValue) {
        int left = 0;
        int right = a.size() - 1;
        while (left <= right) {
            int midpoint = (left + right) / 2;
            Object item = a.get(midpoint);
            int result = ((Comparable) item).compareTo(searchValue);
            if (result == 0) {
                return midpoint;
            } else if (result < 0) {
                left = midpoint + 1;
            } else {
                right = midpoint - 1;
            }
        }
        return -1;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NHLInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NHLInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NHLInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NHLInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NHLInterface().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem btnall;
    private javax.swing.JMenuItem btndelete;
    private javax.swing.JMenu btnedit;
    private javax.swing.JMenuItem btnexit;
    private javax.swing.JMenu btnfile;
    private javax.swing.JMenu btnfilter;
    private javax.swing.JMenuItem btnteam;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JList lstnames;
    private javax.swing.JTextArea txtarea;
    // End of variables declaration//GEN-END:variables
}
